{"version":3,"sources":["assets/images/blue-background-shade.png","assets/images/cucumber-background-shade.png","AppConstants.js","store/actiontypes.js","components/ModeSwitcher/index.js","store/actions/ModeAction.js","components/navbar/index.js","store/actions/TabsAction.js","TemplateConstants.js","components/Common-Components/CustomCss/index.js","store/actions/CardIndexAction.js","components/Common-Components/CustomProjectCard/index.js","components/Content/Projects/index.js","components/Content/About/index.js","components/Content/ConnectFour/Square.js","components/Content/ConnectFour/Board.js","components/Content/ConnectFour/Game.js","components/Content/ConnectFour/index.js","components/Common-Components/CustomCleanCodeCard.js/index.js","components/Content/CleanCodePrinciples/index.js","components/Content/index.js","assets/images/icons8-linkedin.svg","assets/images/icons8-github.svg","assets/images/icons8-twitter.svg","components/Footer/index.js","App.js","reportWebVitals.js","store/reducers/tabs.js","store/reducers/mode.js","store/reducers/CardIndex.js","store/reducers/index.js","store/store.js","index.js"],"names":["TAB_NAMES","ModeTypes","ModeStyles","lightMode","backgroundImage","lightBackground","navBar","bg","variant","card","text","background","field1","field2","textColour","button","colour","darkMode","darkBackground","getGlobalStyles","currentMode","mode","ACTION_TYPE","ModeSwitcher","dispatch","useDispatch","useSelector","state","className","type","onClick","NavHeading","styled","div","HomeNavbar","globalStyles","dispatchOnTabClick","tab","e","console","log","updateTabs","preventDefault","Navbar","Container","Brand","href","Toggle","Collapse","id","Nav","Link","TEMPLATE_CONSTANTS","title","techStack","description","githubLink","SECTIONS","CONCLUSION","FlexRowContainer","changeProjectIndex","projectIndex","changeCleanCodeIndex","cleanCodeIndex","CardContainer","CustomProjectCard","project","projects","cardIndex","Button","length","CustomText","size","Card","Body","Text","target","rel","Projects","About","Square","props","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","a","b","c","Game","history","Array","fill","xIsNext","stepNumber","step","setState","slice","concat","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ConnectFour","CustomCleanCodeCard","cleanCodeSection","cleanCodeSections","point","CleanCodePrinciples","Content","currentTab","renderTabContent","FooterContainer","ImageContainer","Footer","src","twitterIcon","alt","linkedInIcon","githubIcon","Background","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eeb6181.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blue-background-shade.c25dde83.png\";","export default __webpack_public_path__ + \"static/media/cucumber-background-shade.b13b3917.png\";","import darkBackground from './assets/images/blue-background-shade.png';\nimport lightBackground from './assets/images/cucumber-background-shade.png';\n\nexport const TAB_NAMES = {\n\tABOUT: 'About',\n\tPROJECTS: 'Projects',\n\tEDUCATION: 'Education',\n\tCONNECTFOUR: 'CONNECTFOUR',\n\tCLEAN_CODE_GUIDE: 'CLEAN_CODE_GUIDE',\n};\n\nexport const ModeTypes = {\n\tlight: 'LIGHT',\n\tdark: 'DARK',\n};\n\nexport const Profile = {\n\tname: 'Name',\n};\n\nexport const ModeStyles = {\n\tlightMode: {\n\t\tbackgroundImage: lightBackground,\n\t\tnavBar: {\n\t\t\tbg: 'light',\n\t\t\tvariant: 'light',\n\t\t},\n\t\tcard: {\n\t\t\tbg: 'light',\n\t\t\ttext: 'black',\n\t\t},\n\t\tbackground: {\n\t\t\tfield1: 'rgb(238,174,202)',\n\t\t\tfield2:\n\t\t\t\t'radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%)',\n\t\t},\n\t\ttextColour: 'black',\n\t\tbutton: {\n\t\t\tvariant: 'light',\n\t\t\tcolour: '#808080',\n\t\t},\n\t},\n\tdarkMode: {\n\t\tbackgroundImage: darkBackground,\n\t\tnavBar: {\n\t\t\tbg: 'dark',\n\t\t\tvariant: 'dark',\n\t\t},\n\t\tcard: {\n\t\t\tbg: 'dark',\n\t\t\ttext: 'white',\n\t\t},\n\t\tbackground: {\n\t\t\tfield1: 'rgb(52,52,52)',\n\t\t\tfield2:\n\t\t\t\t'linear-gradient(0deg, rgba(52,52,52,1) 0%, rgba(31,30,30,1) 100%);',\n\t\t},\n\t\ttextColour: 'white',\n\t\tbutton: {\n\t\t\tvariant: 'dark',\n\t\t\tcolour: '#808080',\n\t\t},\n\t},\n};\n\nexport const getGlobalStyles = (currentMode) =>\n\tcurrentMode.mode === ModeTypes.dark\n\t\t? ModeStyles.darkMode\n\t\t: ModeStyles.lightMode;\n","export const ACTION_TYPE = {\n\tUPDATE_TABS: 'UPDATE_TABS',\n\tCHANGE_MODE: 'CHANGE_MODE',\n\tCHANGE_PROJECT_INDEX: 'CHANGE_PROJECT_INDEX',\n\tCHANGE_CLEAN_CODE_INDEX: 'CHANGE_CLEAN_CODE_INDEX',\n};\n","import './ModeSwitcher.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleMode } from '../../store/actions/ModeAction';\n\nconst ModeSwitcher = () => {\n\tconst dispatch = useDispatch();\n\tconst { mode } = useSelector((state) => state.mode);\n\n\tconst dispatchOnClick = () => {\n\t\tdispatch(toggleMode(mode));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<label className='switch'>\n\t\t\t\t<input type='checkbox' onClick={dispatchOnClick}></input>\n\t\t\t\t<span className='slider round'></span>\n\t\t\t</label>\n\t\t</>\n\t);\n};\n\nexport default ModeSwitcher;\n","import { ModeTypes } from '../../AppConstants';\nimport { ACTION_TYPE } from '../actiontypes';\n\nexport const toggleMode = (currentMode) => {\n\treturn {\n\t\ttype: ACTION_TYPE.CHANGE_MODE,\n\t\tmode: currentMode === ModeTypes.light ? ModeTypes.dark : ModeTypes.light,\n\t};\n};\n","import React from 'react';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport { getGlobalStyles, TAB_NAMES } from '../../AppConstants';\nimport { updateTabs } from '../../store/actions/TabsAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport ModeSwitcher from '../ModeSwitcher';\n\nconst NavHeading = styled.div``;\n\nconst HomeNavbar = () => {\n\tconst dispatch = useDispatch();\n\n\tconst globalStyles = getGlobalStyles(useSelector((state) => state.mode));\n\n\tconst dispatchOnTabClick = (tab, e) => {\n\t\tconsole.log('tab dispatch', tab);\n\t\tdispatch(updateTabs(tab));\n\t\te.preventDefault();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Navbar\n\t\t\t\tbg={globalStyles.navBar.bg ?? 'light'}\n\t\t\t\tvariant={globalStyles.navBar.variant ?? 'light'}\n\t\t\t>\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href='#home'>\n\t\t\t\t\t\t<NavHeading onClick={(e) => dispatchOnTabClick(TAB_NAMES.ABOUT, e)}>\n\t\t\t\t\t\t\tFaraaz Ahmed\n\t\t\t\t\t\t</NavHeading>\n\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\n\t\t\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\n\t\t\t\t\t\t<Nav className='me-auto'>\n\t\t\t\t\t\t\t<Nav.Link href='#link'>\n\t\t\t\t\t\t\t\t<NavHeading\n\t\t\t\t\t\t\t\t\tonClick={(e) => dispatchOnTabClick(TAB_NAMES.PROJECTS, e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tProjects\n\t\t\t\t\t\t\t\t</NavHeading>\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href='#link2'>\n\t\t\t\t\t\t\t\t<NavHeading\n\t\t\t\t\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\t\t\t\t\tdispatchOnTabClick(TAB_NAMES.CLEAN_CODE_GUIDE, e)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClean Code Guide\n\t\t\t\t\t\t\t\t</NavHeading>\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href='#link3'>\n\t\t\t\t\t\t\t\t<NavHeading\n\t\t\t\t\t\t\t\t\tonClick={(e) => dispatchOnTabClick(TAB_NAMES.CONNECTFOUR, e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTic Tac Toe\n\t\t\t\t\t\t\t\t</NavHeading>\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t<Navbar.Collapse className='justify-content-end'>\n\t\t\t\t\t\t<ModeSwitcher />\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t</>\n\t);\n};\n\nexport default HomeNavbar;\n","import { TAB_NAMES } from '../../AppConstants';\nimport { ACTION_TYPE } from '../actiontypes';\n\nexport const updateTabs = (tab) => {\n\treturn {\n\t\ttype: ACTION_TYPE.UPDATE_TABS,\n\t\ttab: tab ?? TAB_NAMES.ABOUT,\n\t};\n};\n","export const TEMPLATE_CONSTANTS = {\n\tABOUT: {\n\t\tINTRO:\n\t\t\t'Software Engineer who focusses on writing clean, elegant and efficient code.',\n\t},\n\tEDUCATION: {},\n\tPROJECTS: [\n\t\t{\n\t\t\ttitle: 'Discord Bot',\n\t\t\ttechStack: 'Node.js, Discord.js, Heroku',\n\t\t\tdescription:\n\t\t\t\t'A back-end server which interacts with users on discord, responds and aids in moderation of discord servers.',\n\t\t\tgithubLink: 'https://github.com/faraaz-ahmed/panda-bot',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Online Product Review Analysis',\n\t\t\ttechStack: 'Python, Node.js',\n\t\t\tdescription:\n\t\t\t\t'Application which uses machine learning algorithms (Bayes Classifier, Cudnn, SVM Classifier) to classify online product reviews given by customers into positive or negative sentiment.',\n\t\t\tgithubLink: 'https://github.com/faraaz-ahmed/Sentiment-Analysis',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Leetcode Submissions',\n\t\t\ttechStack: 'Python',\n\t\t\tdescription:\n\t\t\t\t'A repository containing my leetcode submissions, a competitive programming platform for practicing problems on data structures and algorithms.',\n\t\t\tgithubLink: 'https://github.com/faraaz-ahmed/leetcode',\n\t\t},\n\t],\n\tCLEANCODE: {\n\t\tSECTIONS: [\n\t\t\t{\n\t\t\t\ttitle: 'Universal principles to follow:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Follow standard rules: experiments always end in disaster.',\n\t\t\t\t\t'Avoid duplication in the code (DRY principle or Don’t Repeat Yourself ).',\n\t\t\t\t\t'We must apply The Boy Scouts rule to our profession: Leave the campground cleaner than you found it.',\n\t\t\t\t\t'Follow SOLID principles to write clean classes and well-organized APIs.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Names rules:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Use names that can be pronounced well.',\n\t\t\t\t\t'Choose descriptive and clear names.',\n\t\t\t\t\t'Use searchable names.',\n\t\t\t\t\t'Make it easy to remember them.',\n\t\t\t\t\t'Use names according to the context.',\n\t\t\t\t\t'Use names that are consistent with each other. For example, it’s confusing to have “retrieved” and “get” as equivalent methods in distinct classes.',\n\t\t\t\t\t'Use the same language in the names of variables, functions: English, French, etc. In my case, I prefer to use English because it’s a standard.',\n\t\t\t\t\t'Avoid encodings and don’t append prefixes or type information.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Comments:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Comments are difficult to maintain and don’t tell the truth about the code, so try to avoid it. They are almost always out of date.',\n\t\t\t\t\t'The code is the best documentation.',\n\t\t\t\t\t'Don’t be redundant.',\n\t\t\t\t\t'Avoid unnecessary comments (most of all).',\n\t\t\t\t\t'Use only as a clarification of code.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Functions rules:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'They should be short and only do one thing. If your function is doing more than “one thing,” it is a perfect moment to extract to another function.',\n\t\t\t\t\t'Avoid passing booleans. Why do you need to pass a Boolean? Do you need to do more than one thing within a function?',\n\t\t\t\t\t'Keep the number of arguments as low as possible.',\n\t\t\t\t\t'Avoid side effects. Declare the arguments as final(Java) if you can.',\n\t\t\t\t\t'Functions should either answer something or do something, but not both.',\n\t\t\t\t\t'Prefer Exceptions to return error codes and extract error handling try catch into their function.',\n\t\t\t\t\t'Don’t return a null value. What is null? It does not provide any information.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Design rules:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'You should declare local variables as close as you can to their usage.',\n\t\t\t\t\t'You should declare instance variables at the top of the class.',\n\t\t\t\t\t'Constants should be declared at the top of the class or in a Constants class by example.',\n\t\t\t\t\t'Follow the Law of Demeter: A class should know only its direct dependencies.',\n\t\t\t\t\t'Coding is like writing; try to express the purpose of the programmer and the code.',\n\t\t\t\t\t'Use dependency injection (DIP).',\n\t\t\t\t\t'If you use third-party libraries, wrap them, so if they change, only your wrapper implementation needs to change.',\n\t\t\t\t\t'It is a good idea to separate concepts vertically.',\n\t\t\t\t\t'Place methods in a top-down direction.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Formatting:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Avoid too-long files.',\n\t\t\t\t\t'Good files have a heading, the critical stuff first, and details later.',\n\t\t\t\t\t'Although we now have big screens and with high resolution, avoid lines get too long (80 or 120 is perfect, in my case 100). You will get used to being more concise, and your code will be more readable.',\n\t\t\t\t\t'Be consistent with the rules of your team.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Classes:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Classes should be small.',\n\t\t\t\t\t'Classes should have only one responsibility and only one reason to change (SRP).',\n\t\t\t\t\t'Keep utility methods and variables private except some cases for doing testing.',\n\t\t\t\t\t'Use correctly package levels: public, protected, or package.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Objects and Data Structures:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Hide internal structure.',\n\t\t\t\t\t'If you can, call only your methods of your class, of objects you have created, and avoid call methods reachable through these objects (Law of Demeter).',\n\t\t\t\t\t'Improve the decoupling of objects.',\n\t\t\t\t\t'Variables should be private and manipulated by getters and setters, but remember, there is no necessity to add getters/setters to each variable to expose them as public.',\n\t\t\t\t\t'The base class should know nothing about their derivatives.',\n\t\t\t\t\t'Objects expose behavior and hide data. Conversely, data structures expose data and lacks of (significant) behavior.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Exception handling:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Throwing errors makes code cleaner than checking for status values throughout the code.',\n\t\t\t\t\t'Provide enough meaning to determine the cause and location of an error.',\n\t\t\t\t\t'Wrap third-party libraries APIs to remap their exceptions as required.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Concurrency:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Concurrency, although it may improve the performance of the program, is difficult, so use it wisely and only when required.',\n\t\t\t\t\t'Keep concurrency control separate from other code.',\n\t\t\t\t\t'Know basic concepts and basic programming models like mutual exclusion, starvation, or deadlocks.',\n\t\t\t\t\t'Create locked sections small.',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Tests:',\n\t\t\t\tdescription: [\n\t\t\t\t\t'Fast: Unit tests should be fast and being executed in a short time.',\n\t\t\t\t\t'Independent: Tests should not depend on each other.',\n\t\t\t\t\t'Repeatable: Tests should be reproducible in any environment.',\n\t\t\t\t\t'One assert per test.',\n\t\t\t\t\t'If you have the code covered by tests, you will not be afraid to modify it and break it.',\n\t\t\t\t\t'TDD: Build your software using tests that guide your development.',\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\tCONCLUSION:\n\t\t\t'Learn the basics and the pillars of programming, and your code will be robust and will adapt to changes more quickly. Also, other programmers will be able to keep it without going crazy.',\n\t},\n};\n","import styled from 'styled-components';\n\nexport const FlexRowContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center !important;\n\talign-content: center !important;\n\tflex-gap: 0.01rem !important;\n`;\n\nexport const ButtonContainer = styled.div`\n\tmax-height: 1rem;\n\tmax-width: 1.5rem;\n`;\n","import { ACTION_TYPE } from '../actiontypes';\n\nexport const changeProjectIndex = (projectIndex = 0) => {\n\treturn {\n\t\ttype: ACTION_TYPE.CHANGE_PROJECT_INDEX,\n\t\tprojectIndex: projectIndex ?? 0,\n\t};\n};\n\nexport const changeCleanCodeIndex = (cleanCodeIndex = 0) => {\n\treturn {\n\t\ttype: ACTION_TYPE.CHANGE_CLEAN_CODE_INDEX,\n\t\tcleanCodeIndex: cleanCodeIndex ?? 0,\n\t};\n};\n","import styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { CustomText } from '../../../App';\nimport { getGlobalStyles } from '../../../AppConstants';\nimport { Button, Card } from 'react-bootstrap';\nimport { FlexRowContainer } from '../CustomCss';\nimport { changeProjectIndex } from '../../../store/actions/CardIndexAction';\nimport { useDispatch } from 'react-redux';\nimport { TEMPLATE_CONSTANTS } from '../../../TemplateConstants';\n\nconst CardContainer = styled.div`\n\tmargin: 5rem 20rem 10rem 20rem;\n\tpadding: auto;\n\twidth: 50rem;\n\talign: center;\n`;\n\nconst CustomProjectCard = ({ project = {} }) => {\n\tconst {\n\t\ttitle = '',\n\t\ttechStack = '',\n\t\tdescription = '',\n\t\tgithubLink = '',\n\t} = project;\n\tconst dispatch = useDispatch();\n\tconst projects = TEMPLATE_CONSTANTS.PROJECTS;\n\tconst globalStyles = getGlobalStyles(useSelector((state) => state.mode));\n\tconst { projectIndex } = useSelector((state) => state.cardIndex);\n\n\tconst onClickNext = () => {\n\t\tdispatch(changeProjectIndex((projectIndex + 1) % projects.length));\n\t};\n\tconst onClickPrevious = () => {\n\t\tdispatch(\n\t\t\tchangeProjectIndex(\n\t\t\t\t(projectIndex === 0 ? projects.length - 1 : projectIndex - 1) %\n\t\t\t\t\tprojects.length\n\t\t\t)\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CardContainer>\n\t\t\t\t<FlexRowContainer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={globalStyles.button.variant}\n\t\t\t\t\t\tonClick={onClickPrevious}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CustomText size='1.5rem' colour={'#808080'}>\n\t\t\t\t\t\t\t{'<<'}\n\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tbg={globalStyles.card.bg ?? 'light'}\n\t\t\t\t\t\ttext={globalStyles.card.text ?? 'black'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t<CustomText size='1.5rem' colour={globalStyles.textColour}>\n\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t<CustomText size='1rem' colour={globalStyles.textColour}>\n\t\t\t\t\t\t\t\t\tDescription: {description}\n\t\t\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t<CustomText size='1rem' colour={globalStyles.textColour}>\n\t\t\t\t\t\t\t\t\tTech Stack: {techStack}\n\t\t\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t<CustomText size='1rem' colour={globalStyles.textColour}>\n\t\t\t\t\t\t\t\t\tGithub Link:{' '}\n\t\t\t\t\t\t\t\t\t<a href={githubLink} target='_blank' rel='noreferrer'>\n\t\t\t\t\t\t\t\t\t\t{githubLink}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t<CustomText size='0.7rem' colour={'#808080'}>\n\t\t\t\t\t\t\t\t\tpage: {`${projectIndex + 1}/${projects.length}`}\n\t\t\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Button variant={globalStyles.button.variant} onClick={onClickNext}>\n\t\t\t\t\t\t<CustomText size='1.5rem' colour={'#808080'}>\n\t\t\t\t\t\t\t{'>>'}\n\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t</Button>\n\t\t\t\t</FlexRowContainer>\n\t\t\t</CardContainer>\n\t\t</>\n\t);\n};\n\nexport default CustomProjectCard;\n","import { getGlobalStyles } from '../../../AppConstants';\nimport { useSelector } from 'react-redux';\nimport { CustomText } from '../../../App';\nimport { TEMPLATE_CONSTANTS } from '../../../TemplateConstants';\nimport CustomProjectCard from '../../Common-Components/CustomProjectCard';\n\nconst Projects = () => {\n\tconst globalStyles = getGlobalStyles(useSelector((state) => state.mode));\n\tconst projects = TEMPLATE_CONSTANTS.PROJECTS;\n\tconst { projectIndex } = useSelector((state) => state.cardIndex);\n\treturn (\n\t\t<>\n\t\t\t<CustomText size='2.5rem' colour={globalStyles.textColour}>\n\t\t\t\tProjects\n\t\t\t</CustomText>\n\t\t\t<CustomProjectCard project={projects[projectIndex]}></CustomProjectCard>\n\t\t</>\n\t);\n};\n\nexport default Projects;\n","import { Card } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { getGlobalStyles } from '../../../AppConstants';\nimport { useSelector } from 'react-redux';\nimport { CustomText } from '../../../App';\n\nconst CardContainer = styled.div`\n\tmargin: 5rem 20rem 10rem 20rem;\n\tpadding: auto;\n\twidth: 50rem;\n\talign: center;\n`;\n\nconst About = () => {\n\tconst globalStyles = getGlobalStyles(useSelector((state) => state.mode));\n\treturn (\n\t\t<>\n\t\t\t<CardContainer>\n\t\t\t\t<Card\n\t\t\t\t\tbg={globalStyles.card.bg ?? 'light'}\n\t\t\t\t\ttext={globalStyles.card.text ?? 'black'}\n\t\t\t\t>\n\t\t\t\t\t{/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t<CustomText size='1rem' colour={globalStyles.textColour}>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tHello! I'm Faraaz Ahmed, a passionate software engineer with a\n\t\t\t\t\t\t\t\t\thistory of working in banking industry.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>I focus on writing clean, elegant and efficient code.</p>\n\t\t\t\t\t\t\t\t<p>Experienced in building enterprise software applications.</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tLearn the basics and the pillars of programming, and your code\n\t\t\t\t\t\t\t\t\twill be robust and will adapt to changes more quickly. Also,\n\t\t\t\t\t\t\t\t\tother programmers will be able to keep it without going crazy.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\tI have good command in working with programming languages such\n\t\t\t\t\t\t\t\t\tas Java, JavaScript, TypeScript and Python.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tExperienced in building web applications through frameworks\n\t\t\t\t\t\t\t\t\tsuch as React, Angular and Spring Boot.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</CardContainer>\n\t\t</>\n\t);\n};\n\nexport default About;\n","import React from 'react';\n\nfunction Square(props) {\n\treturn (\n\t\t<button className='square' onClick={() => props.onClick()}>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\nexport default Square;\n","import React from 'react';\n\nimport Square from './Square';\n\nclass Board extends React.Component {\n\trenderSquare(i) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tvalue={this.props.squares[i]}\n\t\t\t\tonClick={() => this.props.onClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className='board-row'>\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className='board-row'>\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className='board-row'>\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Board;\n","import React from 'react';\nimport { CustomText } from '../../../App';\nimport Board from './Board';\n\nfunction calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}\n\nclass Game extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\thistory: [\n\t\t\t\t{\n\t\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t\t},\n\t\t\t],\n\t\t\txIsNext: true,\n\t\t\tstepNumber: 0,\n\t\t};\n\t}\n\tjumpTo(step) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: step % 2 ? false : true,\n\t\t});\n\t}\n\thandleClick(i) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: squares,\n\t\t\t\t},\n\t\t\t]),\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t\tstepNumber: history.length,\n\t\t});\n\t}\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t} else {\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t\t}\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ? 'Move #' + move : 'Game start';\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<a href='#' onClick={() => this.jumpTo(move)}>\n\t\t\t\t\t\t{desc}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className='game'>\n\t\t\t\t<div className='game-board'>\n\t\t\t\t\t<Board\n\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='game-info'>\n\t\t\t\t\t{/* <div>{status}</div> */}\n\t\t\t\t\t<CustomText size={'1rem'} colour={'#808080'}>\n\t\t\t\t\t\t{status}\n\t\t\t\t\t</CustomText>\n\t\t\t\t\t<p>{moves}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Game;\n","import { getGlobalStyles } from '../../../AppConstants';\nimport { useSelector } from 'react-redux';\nimport { CustomText } from '../../../App';\nimport Game from './Game';\nimport './Game.css';\n\nconst ConnectFour = () => {\n\tconst globalStyles = getGlobalStyles(useSelector((state) => state.mode));\n\treturn (\n\t\t<>\n\t\t\t<CustomText size='2.5rem' colour={globalStyles.textColour}>\n\t\t\t\tTic Tac Toe\n\t\t\t</CustomText>\n\t\t\t<br></br>\n\t\t\t<Game></Game>\n\t\t</>\n\t);\n};\n\nexport default ConnectFour;\n","import styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { CustomText } from '../../../App';\nimport { getGlobalStyles } from '../../../AppConstants';\nimport { Button, Card } from 'react-bootstrap';\nimport { FlexRowContainer } from '../CustomCss';\nimport { changeCleanCodeIndex } from '../../../store/actions/CardIndexAction';\nimport { useDispatch } from 'react-redux';\nimport { TEMPLATE_CONSTANTS } from '../../../TemplateConstants';\n\nconst CardContainer = styled.div`\n\tmargin: 5rem 20rem 10rem 20rem;\n\tpadding: auto;\n\twidth: 50rem;\n\talign: center;\n`;\n\nconst CustomCleanCodeCard = ({ cleanCodeSection = {} }) => {\n\tconst { title = '', description = [] } = cleanCodeSection;\n\tconst dispatch = useDispatch();\n\tconst globalStyles = getGlobalStyles(useSelector((state) => state.mode));\n\tconst { cleanCodeIndex } = useSelector((state) => state.cardIndex);\n\tconst cleanCodeSections = TEMPLATE_CONSTANTS.CLEANCODE.SECTIONS;\n\n\tconst renderBulletPoints = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{description.map((point) => (\n\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t<CustomText size='1rem' colour={globalStyles.textColour}>\n\t\t\t\t\t\t\t{point}\n\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t</Card.Text>\n\t\t\t\t))}\n\t\t\t</>\n\t\t);\n\t};\n\n\tconst onClickNext = () => {\n\t\tdispatch(\n\t\t\tchangeCleanCodeIndex((cleanCodeIndex + 1) % cleanCodeSections.length)\n\t\t);\n\t};\n\tconst onClickPrevious = () => {\n\t\tdispatch(\n\t\t\tchangeCleanCodeIndex(\n\t\t\t\t(cleanCodeIndex === 0\n\t\t\t\t\t? cleanCodeSections.length - 1\n\t\t\t\t\t: cleanCodeIndex - 1) % cleanCodeSections.length\n\t\t\t)\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CardContainer>\n\t\t\t\t<FlexRowContainer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={globalStyles.button.variant}\n\t\t\t\t\t\tonClick={onClickPrevious}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CustomText size='1.5rem' colour={'#808080'}>\n\t\t\t\t\t\t\t{'<<'}\n\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tbg={globalStyles.card.bg ?? 'light'}\n\t\t\t\t\t\ttext={globalStyles.card.text ?? 'black'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t<CustomText size='1.5rem' colour={globalStyles.textColour}>\n\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t{renderBulletPoints()}\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t<CustomText size='0.7rem' colour={'#808080'}>\n\t\t\t\t\t\t\t\t\tpage: {`${cleanCodeIndex + 1}/${cleanCodeSections.length}`}\n\t\t\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t{/* <Button variant=\"primary\">Go somewhere</Button> */}\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Button variant={globalStyles.button.variant} onClick={onClickNext}>\n\t\t\t\t\t\t<CustomText size='1.5rem' colour={'#808080'}>\n\t\t\t\t\t\t\t{'>>'}\n\t\t\t\t\t\t</CustomText>\n\t\t\t\t\t</Button>\n\t\t\t\t</FlexRowContainer>\n\t\t\t</CardContainer>\n\t\t</>\n\t);\n};\n\nexport default CustomCleanCodeCard;\n","import { getGlobalStyles } from '../../../AppConstants';\nimport { useSelector } from 'react-redux';\nimport { CustomText } from '../../../App';\nimport { TEMPLATE_CONSTANTS } from '../../../TemplateConstants';\nimport CustomCleanCodeCard from '../../Common-Components/CustomCleanCodeCard.js';\n\nconst CleanCodePrinciples = () => {\n\tconst globalStyles = getGlobalStyles(useSelector((state) => state.mode));\n\tconst cleanCodeSections = TEMPLATE_CONSTANTS.CLEANCODE.SECTIONS;\n\tconst { cleanCodeIndex } = useSelector((state) => state.cardIndex);\n\treturn (\n\t\t<>\n\t\t\t<CustomText size='2.5rem' colour={globalStyles.textColour}>\n\t\t\t\tClean Code Guide\n\t\t\t</CustomText>\n\t\t\t<CustomCleanCodeCard\n\t\t\t\tcleanCodeSection={cleanCodeSections[cleanCodeIndex]}\n\t\t\t></CustomCleanCodeCard>\n\t\t</>\n\t);\n};\n\nexport default CleanCodePrinciples;\n","import '../../App.css';\nimport { TAB_NAMES } from '../../AppConstants';\nimport Projects from './Projects';\nimport About from './About';\nimport { useSelector } from 'react-redux';\nimport ConnectFour from './ConnectFour';\nimport CleanCodePrinciples from './CleanCodePrinciples';\n\nconst Content = (currentTab = TAB_NAMES.ABOUT) => {\n\tcurrentTab = useSelector((state) => state.tab);\n\tconsole.log('currentTab', currentTab);\n\tconst renderTabContent = () => {\n\t\tif (currentTab.tab === TAB_NAMES.PROJECTS) {\n\t\t\treturn <Projects />;\n\t\t} else if (currentTab.tab === TAB_NAMES.CLEAN_CODE_GUIDE) {\n\t\t\treturn <CleanCodePrinciples />;\n\t\t} else if (currentTab.tab === TAB_NAMES.CONNECTFOUR) {\n\t\t\treturn <ConnectFour />;\n\t\t} else if (currentTab.tab === TAB_NAMES.EDUCATION) {\n\t\t\treturn <ConnectFour />;\n\t\t} else {\n\t\t\treturn <About />;\n\t\t}\n\t};\n\treturn <>{renderTabContent()}</>;\n};\n\nexport default Content;\n","export default __webpack_public_path__ + \"static/media/icons8-linkedin.075cd72c.svg\";","export default __webpack_public_path__ + \"static/media/icons8-github.49a92957.svg\";","export default __webpack_public_path__ + \"static/media/icons8-twitter.36a8d6f8.svg\";","import styled from 'styled-components';\nimport linkedInIcon from '../../assets/images/icons8-linkedin.svg';\nimport githubIcon from '../../assets/images/icons8-github.svg';\nimport twitterIcon from '../../assets/images/icons8-twitter.svg';\n\nconst FooterContainer = styled.div`\n\tmargin: 1rem;\n\tdisplay: flex;\n\tflex-direction: row;\n\tposition: absolute;\n\tbottom: 1rem;\n\tgap: 0.325rem;\n`;\n\nconst ImageContainer = styled.div`\n\tscale: 7%;\n\tmax-height: 7%;\n\tmax-width: 7%;\n`;\n\nconst Footer = () => {\n\treturn (\n\t\t<>\n\t\t\t<FooterContainer>\n\t\t\t\t<a\n\t\t\t\t\thref='https://twitter.com/faraaz_ahmed_'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t\trel='noreferrer'\n\t\t\t\t>\n\t\t\t\t\t<img src={twitterIcon} alt='' />\n\t\t\t\t</a>\n\t\t\t\t<br></br>\n\t\t\t\t<a\n\t\t\t\t\thref='https://www.linkedin.com/in/faraaz-ahmed-286a75141/'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t\trel='noreferrer'\n\t\t\t\t>\n\t\t\t\t\t<ImageContainer>\n\t\t\t\t\t\t<img src={linkedInIcon} alt='' />\n\t\t\t\t\t</ImageContainer>\n\t\t\t\t</a>\n\t\t\t\t<br></br>\n\t\t\t\t<a\n\t\t\t\t\thref='https://github.com/faraaz-ahmed/'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t\trel='noreferrer'\n\t\t\t\t>\n\t\t\t\t\t<ImageContainer>\n\t\t\t\t\t\t<img src={githubIcon} alt='' />\n\t\t\t\t\t</ImageContainer>\n\t\t\t\t</a>\n\t\t\t</FooterContainer>\n\t\t</>\n\t);\n};\n\nexport default Footer;\n","import './App.css';\nimport HomeNavBar from './components/navbar';\nimport styled from 'styled-components';\nimport Content from './components/Content';\nimport { getGlobalStyles } from './AppConstants';\nimport { useSelector } from 'react-redux';\nimport Footer from './components/Footer';\n\nconst Background = styled.div`\n\tbackground: ${(props) => props.background.field1 ?? ''};\n\tbackground: ${(props) => props.background.field2 ?? ''};\n\theight: 200vh;\n`;\n\nexport const CustomText = styled.div`\n\tfont-size: ${(props) => props.size ?? '1rem'};\n\tcolor: ${(props) => props.colour ?? 'white'};\n`;\n\nfunction App() {\n\tconst globalStyles = getGlobalStyles(useSelector((state) => state.mode));\n\treturn (\n\t\t<div className='App'>\n\t\t\t<link rel='preconnect' href='https://fonts.gstatic.com'></link>\n\t\t\t<link\n\t\t\t\thref='https://fonts.googleapis.com/css2?family=Hanalei+Fill&display=swap'\n\t\t\t\trel='stylesheet'\n\t\t\t></link>\n\t\t\t<Background background={globalStyles.background}>\n\t\t\t\t<HomeNavBar />\n\t\t\t\t<Content />\n\t\t\t\t<Footer />\n\t\t\t</Background>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TAB_NAMES } from '../../AppConstants';\nimport { ACTION_TYPE } from '../actiontypes';\n\nconst initialState = {\n\ttab: TAB_NAMES.ABOUT,\n};\n\nexport const tabsReducer = (state = initialState, action) => {\n\tif (action.type === ACTION_TYPE.UPDATE_TABS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\ttab: action.tab,\n\t\t};\n\t}\n\treturn state;\n};\n","import { ModeTypes } from '../../AppConstants';\nimport { ACTION_TYPE } from '../actiontypes';\n\nconst initialState = {\n\tmode: ModeTypes.light,\n};\n\nexport const modeReducer = (state = initialState, action) => {\n\tif (action.type === ACTION_TYPE.CHANGE_MODE) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tmode: action.mode,\n\t\t};\n\t}\n\treturn state;\n};\n","import { ACTION_TYPE } from '../actiontypes';\n\nconst initialState = {\n\tprojectIndex: 0,\n\tcleanCodeIndex: 0,\n};\n\nexport const indexReducer = (state = initialState, action) => {\n\tif (action.type === ACTION_TYPE.CHANGE_PROJECT_INDEX) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tprojectIndex: action.projectIndex,\n\t\t};\n\t} else if (action.type === ACTION_TYPE.CHANGE_CLEAN_CODE_INDEX) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tcleanCodeIndex: action.cleanCodeIndex,\n\t\t};\n\t}\n\treturn state;\n};\n","import { combineReducers } from 'redux';\nimport { tabsReducer } from './tabs';\nimport { modeReducer } from './mode';\nimport { indexReducer } from './CardIndex';\n\nconst rootReducer = combineReducers({\n\ttab: tabsReducer,\n\tmode: modeReducer,\n\tcardIndex: indexReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { ModeTypes, TAB_NAMES } from '../AppConstants';\nimport rootReducer from './reducers';\n\nconst initialState = {\n\ttab: {\n\t\ttab: TAB_NAMES.ABOUT,\n\t},\n\tmode: {\n\t\tmode: ModeTypes.light,\n\t},\n\tcardIndex: {\n\t\tprojectIndex: 0,\n\t\tcleanCodeIndex: 0,\n\t},\n};\nlet store = createStore(\n\trootReducer,\n\tinitialState,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}